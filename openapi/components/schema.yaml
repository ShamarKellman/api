#
# Common Components
#


#
# Error Object
Error:
  type: object
  properties:
    meta:
      type: object
      description: Meta may contain some details about the error
    data:
      type: object
      description: Usually empty but main contain information about the underlying data


#
#
Error400:
  allOf:
    - $ref: '#/components/schema/Error'
    - description: General Client Request Error


#
#
Error403:
  allOf:
    - $ref: '#/components/schema/Error'
    - description: Error for Access Denied


#
#
Error404:
  allOf:
    - $ref: '#/components/schema/Error'
    - description: Error for Not Found


#
#
Error409:
  allOf:
    - $ref: '#/components/schema/Error'
    - description: Conflict


#
#
Error500:
  allOf:
    - $ref: '#/components/schema/Error'
    - description: Server Error


Success200:
  type: object
  properties:
    meta:
      type: object
    data:
      type: object
      # anyOf:
      #   array
      #   object

#
# Account Object?
#Account:
#  type: object
#  properties:
#    code:
#      type: string
#      description: Code of the Account, could be a license or business identifier
#    name:
#      type: string
#      description: Name of the Account.

#
# Company Object
Company:
  $ref: './Company.yaml'


#
#
Company_Type:
  type: object
  properties:
    id:
      type: string
      description: Unique ULID value for this Company Type
    code:
      type: string
      description: A single character descriptor of the Company Type
    name:
      type: string
      description: A Friendly Name for this Company Type


#
# License
License:
  $ref: './License.yaml'

#
#
License_Type:
  type: object
  properties:
    id:
      type: string
      description: Unique ULID value for this type of license.
    code:
      type: string
      description: A single character descriptor of the License Type
    name:
      type: string
      description: A Friendly Name for this Company Type


# Contact Object
Contact:
  $ref: './Contact.yaml'


#
#
Contact_Type:
  type: string
  enum:
    - Owner
    - User
    - Employee
    - Driver
    - Vendor
    - Client


#
# Plant Object
Plant:
  type: object
  properties:
    name:
      type: string
      description: Free-form Name of the plant, many times just the Strain
    strain:
      type: object
      $ref: './Strain.yaml'


#
# Plant_Collect_Material Object
Plant_Collect_Material:
  type: object
  properties:
    kind:
      type: string
      enum: [ "wet-plant", "wet-waste", "dry-buds", "dry-trim", "dry-waste" ]
      description: "Material Type: Flower/Wet, Flower/Dry, Trim/Wet|Dry, Waste/Wet|Dry"
    weight:
      type: number
      format: double
    weight_unit:
      type: string
      enum: [ "g", "kg", "oz", "lb" ]


#
# Inventory Object
Lot:
  type: object
  properties:
    id:
      type: string
      required: true
      description: The Inventory Unique Identifier
    name:
      type: string
    product:
      $ref: '#/components/schema/Product'
    strain:
      $ref: '#/components/schema/Strain'


#
# A Product
Product:
  type: object
  properties:
    id:
      type: string
      description: The Product Unique Identifer from the CRE
    name:
      type: string
    type:
      $ref: '#/components/schema/Product_Type'
    meta:
      type: object


#
# a product Type
Product_Type:
  $ref: './Product_Type.yaml'


#
#
Lab_Sample:
  $ref: './Lab_Sample.yaml'


#
#
Lab_Result:
  $ref: './Lab_Result.yaml'


#
#
Lab_Result_Metric:
  $ref: './Lab_Result_Metric.yaml'


#
#
Transfer:
  type: object
  properties:
    kind:
      type: string
      enum: [ "incoming", "outgoing" ]
    source_license:
      type: string
    target_license:
      type: string
    depart:
      type: string
      format: dateTime
    arrive:
      type: string
      format: dateTime
    item_list:
      type: array
      items:
        $ref: '#/components/schema/Transfer_Inventory'


#
#
Transfer_Inventory:
  type: object
  properties:
    inventory:
      type: string
      description: Inventory as String ID or Object
    price:
      type: number
      format: double
      description: The full price of the item


#
#
Sale:
  type: object
  properties:
    inventory:
      description: Inventory Item Identifier
      type: string
    unit_count:
      description: Quantity of Items Sold
      type: string
    unit_price:
      description: Price per Unit *NOT* the full price
      type: string
    created:
      type: string
      format: dateTime

Sale_Item:
  type: object


Strain:
  $ref: './Strain.yaml'


#
#
Request_Create_Lot:
  description: Create a New Lot
  type: object
  properties:
    source:
      type: null
    output:
      type: object
      properties:
        product_id:
          type: string
        qty:
          type: number

#
#
Request_Convert_Lot:
  description: Convert one or more Source lots to Output
  type: object
  properties:
    source:
      type: null
    output:
      type: object
      properties:
        product_id:
          type: string
        qty:
          type: number


#
#
Request_Split_Lot:
  description: Split some material from an original lot, creating a new sub-lot
  type: object
  properties:
    source:
      type: string
    output:
      type: number
